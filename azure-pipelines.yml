trigger:
  branches:
    include:
      - master

pool:
  name: MySelfHostedPool

variables:
  resourceGroupName: "myResourceGroup"
  serviceConnection: "myARMConnection"
  subscriptionId: "938d8cb0-7326-4b21-82ac-a9a5017a87ea"
  location: "East US"
  sshKeyPath: "$(Build.ArtifactStagingDirectory)/id_rsa"
  keyVaultName: "myPresonalKeyVault"
  vaultAdmin: "Guy Erreich"

stages:
- stage: Deploy
  displayName: "Deploy"
  jobs:
  - job: preConfigure
    displayName: "Fetch Needed Variables"
    steps:
    - script: |
        ssh-keygen -t rsa -b 2048 -f $(sshKeyPath) -C "azureuser@myserver" -m PEM -N "" -q
        sshPublicKey=$(<$(sshKeyPath).pub)
        sshPrivateKey=$(<$(sshKeyPath))
        echo "##vso[task.setvariable variable=sshPublicKey;isOutput=true;isSecret=true]$sshPublicKey"
        echo "##vso[task.setvariable variable=sshPrivateKey;isOutput=true;isSecret=true]$sshPrivateKey"
      displayName: "Generate SSH Key"
      name: generateKey

    - task: AzureCLI@2
      displayName: "Get User Object ID"
      name: getAdminObjectID
      inputs:
        azureSubscription: $(serviceConnection)
        scriptType: 'bash'
        scriptLocation: 'inlineScript'
        inlineScript: |
          userId=$(az ad user list --display-name "$(vaultAdmin)" --query "[].id" --output tsv)
          echo "##vso[task.setvariable variable=adminObjectID;isOutput=true]$userId"
  
    - script: |
        vmName=$(echo "myLinuxVM$(date +"%d-%m-%Y-%H-%M-%S")")
        echo "vmName=$vmName"
        echo "##vso[task.setvariable variable=vmName;isOutput=true]$vmName"
      displayName: "Generate VM Name"
      name: generateVMName

  - job: deployingResources
    displayName: "Deploy Resources"
    dependsOn: preConfigure
    variables:
      sshPrivateKey: $[ dependencies.preConfigure.outputs['generateKey.sshPrivateKey'] ]
      sshPublicKey: $[ dependencies.preConfigure.outputs['generateKey.sshPublicKey'] ]
      adminObjectID: $[ dependencies.preConfigure.outputs['getAdminObjectID.adminObjectID'] ]
      vmName: $[ dependencies.preConfigure.outputs['generateVMName.vmName'] ]
    steps:
    - task: AzureResourceManagerTemplateDeployment@3
      displayName: "Deploy ARM"
      inputs:
        deploymentScope: 'Resource Group'
        azureResourceManagerConnection: $(serviceConnection)
        subscriptionId: $(subscriptionId)
        action: 'Create Or Update Resource Group'
        resourceGroupName: $(resourceGroupName)
        location: $(location)
        templateLocation: 'Linked artifact'
        csmFile: 'myDeployment.json'
        deploymentMode: 'Complete'
        overrideParameters: '-keyVaultName "$(keyVaultName)" -adminObjectID "$(adminObjectID)" -sshPrivateKey "$(sshPrivateKey)" -sshPublicKey "$(sshPublicKey)" -vmName "$(vmName)"'

